}
counts$Situation <- colname
return(counts)
},simplify = F))
alk_table$mutation <- 'ALK'
alk_table$lesions <- NA
alk_table$lesions[alk_table$Situation %in% c('1_3_brain_lesions_all_2_cm_in_maximum_diameter','1_3_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter')] <- '1-3 brain lesions'
alk_table$lesions[alk_table$Situation %in% c('4_9_brain_lesions_all_2_cm_in_maximum_diameter','4_9_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter')] <- '4-9 brain lesions'
alk_table$lesions[alk_table$Situation %in% c('9_brain_lesions_all_2_cm_in_maximum_diameter','9_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter')] <- '>9 brain lesions'
#table(alk_table$lesions,alk_table$Situation,useNA = 'always')
alk_table$maximum_diameter <- NA
alk_table$maximum_diameter[alk_table$Situation %in% c('1_3_brain_lesions_all_2_cm_in_maximum_diameter','4_9_brain_lesions_all_2_cm_in_maximum_diameter',
'9_brain_lesions_all_2_cm_in_maximum_diameter')] <- 'all < 2cm in maximum diameter'
alk_table$maximum_diameter[alk_table$Situation %in% c('1_3_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter','4_9_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter',
'9_brain_lesions_at_least_one_is_more_than_2_cm_in_maximum_diameter')] <- 'at least one >2cm in maximum diameter'
alk_table$Treatment <- factor(alk_table$Treatment,levels=c('Systemic therapy','RT','Surgery'))
#table(alk_table$maximum_diameter,alk_table$Situation,useNA = 'always')
levels(alk_table$Specialty) <- c('CO','MO','NS','RO')
alk_table$label <- paste0(sprintf("%.1f", round(alk_table$Proportion,1)),"%")
alk_table$maximum_diameter <- factor(alk_table$maximum_diameter,levels = c('all < 2cm in maximum diameter','at least one >2cm in maximum diameter'))
alk_table$lesions <- factor(alk_table$lesions,levels = c('1-3 brain lesions','4-9 brain lesions','>9 brain lesions'))
# Chunk 15
totals <- aggregate(Count~lesions+maximum_diameter+Specialty,data=alk_table,sum)
totals$Treatment <- NA
totals$Proportion <- -7
totals$label <- totals$Count
ggplot(alk_table, aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
#facet_grid(. ~ lesions+maximum_diameter)+
facet_grid(vars(lesions), vars(maximum_diameter))+
theme_classic()+labs(title="ALK")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1")+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-10,100.1))
# Chunk 16
alk_egfr_table <- rbind(egfr_table,alk_table)
alk_egfr_table$mutation <- factor(alk_egfr_table$mutation,levels=c("EGFR","ALK"))
alk_egfr_table$Specialty <- factor(alk_egfr_table$Specialty,levels=c('MO','CO','RO','NS'))
totals <- aggregate(Count~lesions+maximum_diameter+Specialty+mutation,data=alk_egfr_table,sum)
totals$Treatment <- NA
totals$Proportion <- -7
totals$label <- totals$Count
#Medical oncologist, clinical oncologist, radiation oncologist and neurosurgeons?
labels <- expand.grid(maximum_diameter = unique(alk_egfr_table$maximum_diameter), lesions = unique(alk_egfr_table$lesions),mutation=unique(alk_egfr_table$mutation))
labels <- labels[order(labels$mutation,labels$maximum_diameter),]
labels$label <- LETTERS[1:12]
labels$Proportion = 105
labels$Treatment <- NA
labels$Specialty <- 2.5
ggplot(alk_egfr_table, aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-10,106)) +
geom_text(data=labels,cex=5)
##systemic therapy, radiotherapy and surgery
# Chunk 17
alk_egfr_table <- rbind(egfr_table,alk_table)
alk_egfr_table$mutation <- factor(alk_egfr_table$mutation,levels=c("EGFR","ALK"))
alk_egfr_table$Specialty <- factor(alk_egfr_table$Specialty,levels=c('MO','CO','RO','NS'))
totals <- aggregate(Count~lesions+maximum_diameter+Specialty+mutation,data=alk_egfr_table,sum)
totals$Treatment <- NA
totals$Proportion <- -7
totals$label <- totals$Count
#Medical oncologist, clinical oncologist, radiation oncologist and neurosurgeons?
labels <- expand.grid(maximum_diameter = unique(alk_egfr_table$maximum_diameter), lesions = unique(alk_egfr_table$lesions),mutation=unique(alk_egfr_table$mutation))
labels <- labels[order(labels$mutation,labels$maximum_diameter),]
labels$label <- LETTERS[1:12]
labels$Proportion = 134
labels$Treatment <- NA
labels$Specialty <- 2.5
pvalue_lines <- data.frame(x=c(1,2,3,4,1,3,1.5,3.5,1.5,1,2,3,4,1,3),xend=c(1,2,3,4,2,4,1.5,3.5,3.5,1,2,3,4,2,4),y=c(100,100,100,100,105,105,105,105,112,-13,-13,-13,-13,-20,-20),yend=c(105,105,105,105,105,105,112,112,112,-20,-20,-20,-20,-20,-20))
pvalues_for_plot$x <- NULL
pvalues_for_plot$y <- NULL
pvalues_for_plot$x[pvalues_for_plot$comp=="MOCO vs RONS"] <- 2.5
pvalues_for_plot$y[pvalues_for_plot$comp=="MOCO vs RONS"] <- 118
pvalues_for_plot$x[pvalues_for_plot$comp=="MO vs  CO"] <- 1.5
pvalues_for_plot$y[pvalues_for_plot$comp=="MO vs  CO"] <- -25
pvalues_for_plot$x[pvalues_for_plot$comp=="NS vs  RO"] <- 3.5
pvalues_for_plot$y[pvalues_for_plot$comp=="NS vs  RO"] <- -25
pvalues_for_plot$label <- paste0("p=",pvalues_for_plot$clean_pv)
pvalues_for_plot$maximum_diameter <- factor(pvalues_for_plot$maximum_diameter,levels = levels(alk_egfr_table$maximum_diameter))
pvalues_for_plot$lesions <- factor(pvalues_for_plot$lesions,levels = levels(alk_egfr_table$lesions))
pvalues_for_plot$mutation <- factor(pvalues_for_plot$mutation,levels = levels(alk_egfr_table$mutation))
ggplot(alk_egfr_table, aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140)) +
geom_text(data=labels,cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot,aes(x=x,y=y,fill = NULL, group = NULL))
##systemic therapy, radiotherapy and surgery
alk_egfr_table
alk_egfr_table$mutation <- factor(alk_egfr_table$mutation,levels=c("EGFR","ALK"))
alk_egfr_table$Specialty <- factor(alk_egfr_table$Specialty,levels=c('MO','CO','RO','NS'))
totals <- aggregate(Count~lesions+maximum_diameter+Specialty+mutation,data=alk_egfr_table,sum)
totals$Treatment <- NA
totals$Proportion <- -7
totals$label <- totals$Count
alk_egfr_table$maximum_diameter
table(alk_egfr_table$maximum_diameter)
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140)) +
geom_text(data=labels,cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot,aes(x=x,y=y,fill = NULL, group = NULL))
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140))
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140)) +
geom_text(data=labels,cex=5)
labels
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140)) +
geom_text(data=labels[labels$maximum_diameter=="all < 2cm in maximum diameter"],cex=5)
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140)) +
geom_text(data=labels[labels$maximum_diameter=="all < 2cm in maximum diameter",],cex=5)
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals)+ylim(c(-25,140))
totals
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="all < 2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels[labels$maximum_diameter=="all < 2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="all < 2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels[labels$maximum_diameter=="all < 2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="all < 2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
labels
labels$label
labels2 <- labels
labels2 <- labels
labels2$label <- c("A","B","C","D","E","F","A","B","C","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="all < 2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels[labels$maximum_diameter=="all < 2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="all < 2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
labels2 <- labels
labels2$label <- c("A","B","C","D","E","F","A","B","C","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="all < 2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels2[labels2$maximum_diameter=="all < 2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="all < 2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
labels2
labels2$label <- c("A","B","C","A","B","C","D","E","F","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="all < 2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="all < 2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels2[labels2$maximum_diameter=="all < 2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="all < 2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
table(alk_egfr_table$maximum_diameter)
labels2 <- labels
labels2$label <- c("A","B","C","A","B","C","D","E","F","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="at least one >2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="at least one >2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels2[labels2$maximum_diameter=="at least one >2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="at least one >2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
labels2 <- labels
labels2$label <- c("A","B","C","A","B","C","D","E","F","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="at least one >2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~ maximum_diameter+lesions)
labels2 <- labels
labels2$label <- c("A","B","C","A","B","C","D","E","F","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="at least one >2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~lesions)
labels2 <- labels
labels2$label <- c("A","B","C","A","B","C","D","E","F","D","E","F")
ggplot(alk_egfr_table[alk_egfr_table$maximum_diameter=="at least one >2cm in maximum diameter",], aes(x = Specialty, y = Proportion, fill = Treatment, group = Treatment, label = label)) +
geom_bar(stat = 'identity',alpha=0.8) +
facet_grid(mutation ~lesions)+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_brewer(palette="Set1",breaks=c('Systemic therapy','RT','Surgery'),labels=c('Systemic therapy','Radiotherapy ','Surgery'))+
geom_text(position = position_stack(vjust = .5))+
geom_text(data=totals[totals$maximum_diameter=="at least one >2cm in maximum diameter",])+ylim(c(-25,140)) +
geom_text(data=labels2[labels2$maximum_diameter=="at least one >2cm in maximum diameter",],cex=5) +
geom_segment(data=pvalue_lines,aes(x=x,xend=xend,y=y,yend=yend, fill = NULL, group = NULL, label = NULL))+
geom_text(data=pvalues_for_plot[pvalues_for_plot$maximum_diameter=="at least one >2cm in maximum diameter",],
aes(x=x,y=y,fill = NULL, group = NULL))
devtools::load_all()
## No changes some negative some positive
df <- data.frame(id=c(1,2,3,4,5),start=c(0,0,0,0,0),end=c(1,2,3,4,5))
swimplot(df)
swimmer_plot(df)
swimmer_plot(df)
swimmer_plot(df,name_fill=id)
swimmer_plot(df,name_fill='id')
## No changes all negative
df <- data.frame(id=c(1,2,3,4,5),start=c(-5,-4,-3,-2,-1),end=c(1,2,3,4,5))
swimmer_plot(df,name_fill='id')
df <- data.frame(id=c(1,2,3,4,5),start=c(-5,-4,0,1,2),end=c(1,2,3,4,5))
swimmer_plot(df,name_fill=id)
df <- data.frame(id=c(1,2,3,4,5),start=c(-5,-4,0,1,2),end=c(1,2,3,4,5))
swimmer_plot(df,name_fill='id')
df <- data.frame(id=c(3,4,5),start=c(0,1,2),end=c(3,4,5))
swimmer_plot(df,name_fill='id')
df <- data.frame(id=c(3,4,5,5),start=c(0,1,2,10),end=c(3,4,5,15))
swimmer_plot(df,name_fill='id')
df
df
id=c(3,4,5,5)
start=c(0,1,2,10)
end=c(3,4,5,15)
df
name_fill='id'
df
id='id'
end='end'
start='start'
name_fill=NULL
name_col=NULL
name_alpha=NULL
increasing=TRUE
id_order = NULL
stratify=FALSE
base_size=11
identifiers=TRUE
#Check deprecated id_order = increasing or decreasing
if(!is.null(id_order)) {
if(id_order[1] %in% c("increasing",'decreasing')){
warning("Increasing/decreasing have been deprecated as options for id_order use increasing=TRUE or increasing=FALSE instead",
call. = FALSE)
if(id_order[1]=="increasing") increasing = TRUE
if(id_order[1]=="decreasing") increasing = FALSE
id_order = NULL
}
}
df[,id] <- as.character(df[,id])
if(is.null(id_order)){
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
if(increasing) {
id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID),id]
}else id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID,decreasing = T),id]
}
if (id_order[1] %in% names(df)) {
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
if(increasing) {id_order <- starting_information[order(starting_information[,id_order[1]], -rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}else id_order <- starting_information[order(starting_information[,id_order[1]], rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}
df <- df[order(df[,id],df[,end]),]
start
##Checking there are not overlapping sections
check_for_overlap <- function(data,id,start,end,x){
single <- data[data[,id]==x,]
if(dim(single)[1]>1){
single <- single[order(single[,start]),]
check_val <- min(single[,start]-dplyr::lag(single[,end]),na.rm = T)
if(check_val<0) return(x)
}
}
overlap <- unlist(sapply(unique(df[,id]), check_for_overlap,start=start,end=end,data=df,id=id))
overlap
start
end
df
id
check_for_overlap
x=2
single <- data[data[,id]==x,]
x
data = df
single <- data[data[,id]==x,]
single
x
data
data[,'id']
x=4
single <- data[data[,id]==x,]
single
dim(single)[1]
dim(single)[1]>=1
single <- single[order(single[,start]),]
single
check_val <- min(single[,start]-dplyr::lag(single[,end]),na.rm = T)
single
df_fix <- df[df[,id]==id_fix,]
id_fix = 4
df_fix <- df[df[,id]==id_fix,]
df_fix
max(df_fix[,end])<0
#Starting bar at 0
start_time_pat <- 0
start_time_pat
min(df_fix[,start])<0
#Looking the start times which do not meet the last end time these will be the end times of the filler sections
end_blank <- df_fix[,start][c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
end_blank
length(end_blank)==0
##start times of the filler are the previous end time
start_blank <- c(start_time_pat,dplyr::lag(df_fix[,end])[-1])[c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
df_fixed <- data.frame(id_fix,start_blank,end_blank)
names(df_fixed) <- c(id,start,end)
merge(df_fixed,df_fix,all=T)
add_in <- function(id_fix,df,start,end){
df_fix <- df[df[,id]==id_fix,]
##Filling in space up to 0
if(max(df_fix[,end])<0){
df_fixed <- data.frame(id_fix,max(df_fix[,end]),0)
names(df_fixed) <- c(id,start,end)
df_fix <- merge(df_fixed,df_fix,all=T)
}
#Starting bar at 0
start_time_pat <- 0
#If the bar starts before 0 that is okay too
if(min(df_fix[,start])<0) start_time_pat <- min(df_fix[,start])
#Looking the start times which do not meet the last end time these will be the end times of the filler sections
end_blank <- df_fix[,start][c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
if(length(end_blank)==0) return(df_fix) # IF no filler done
##start times of the filler are the previous end time
start_blank <- c(start_time_pat,dplyr::lag(df_fix[,end])[-1])[c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
df_fixed <- data.frame(id_fix,start_blank,end_blank)
names(df_fixed) <- c(id,start,end)
return(merge(df_fixed,df_fix,all=T))
}
df <- do.call(rbind.data.frame,sapply(unique(df[,id]), add_in,df=df,start=start,end=end,simplify = F))
df
##Fixing sections that cross 0
cross_zero <- function(i,df=df,start,end){
df_fix <- df[i,]
if(df_fix[,start]<0 & df_fix[,end]>0){
df_fix <- rbind(df_fix,df_fix)
df_fix[1,end] <- 0
df_fix[2,start] <- 0
}
return(df_fix)
}
df <- do.call(rbind.data.frame,sapply(seq_along(df[,start]), cross_zero,df=df,start=start,end=end,simplify = F))
df
#Filling in any gaps (Adding empty bars at 0 and between sections)
if(start %in% names(df)){
##Checking there are not overlapping sections
check_for_overlap <- function(data,id,start,end,x){
single <- data[data[,id]==x,]
if(dim(single)[1]>1){
single <- single[order(single[,start]),]
check_val <- min(single[,start]-dplyr::lag(single[,end]),na.rm = T)
if(check_val<0) return(x)
}
}
overlap <- unlist(sapply(unique(df[,id]), check_for_overlap,start=start,end=end,data=df,id=id))
if(length(overlap)>0) {stop(paste0(    paste0("There is(are) ", length(overlap)," id(s) with overlap between bars, they are ",id ,"=(",paste (overlap,sep="", collapse=","),")")))}
add_in <- function(id_fix,df,start,end){
df_fix <- df[df[,id]==id_fix,]
##Filling in space up to 0
if(max(df_fix[,end])<0){
df_fixed <- data.frame(id_fix,max(df_fix[,end]),0)
names(df_fixed) <- c(id,start,end)
df_fix <- merge(df_fixed,df_fix,all=T)
}
#Starting bar at 0
start_time_pat <- 0
#If the bar starts before 0 that is okay too
if(min(df_fix[,start])<0) start_time_pat <- min(df_fix[,start])
#Looking the start times which do not meet the last end time these will be the end times of the filler sections
end_blank <- df_fix[,start][c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
if(length(end_blank)==0) return(df_fix) # IF no filler done
##start times of the filler are the previous end time
start_blank <- c(start_time_pat,dplyr::lag(df_fix[,end])[-1])[c(start_time_pat,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
df_fixed <- data.frame(id_fix,start_blank,end_blank)
names(df_fixed) <- c(id,start,end)
return(merge(df_fixed,df_fix,all=T))
}
df <- do.call(rbind.data.frame,sapply(unique(df[,id]), add_in,df=df,start=start,end=end,simplify = F))
##Fixing sections that cross 0
cross_zero <- function(i,df=df,start,end){
df_fix <- df[i,]
if(df_fix[,start]<0 & df_fix[,end]>0){
df_fix <- rbind(df_fix,df_fix)
df_fix[1,end] <- 0
df_fix[2,start] <- 0
}
return(df_fix)
}
df <- do.call(rbind.data.frame,sapply(seq_along(df[,start]), cross_zero,df=df,start=start,end=end,simplify = F))
}else {
start = 'starting_bars_variable'
df$starting_bars_variable <- stats::ave(df[,end], df[,id], FUN=dplyr::lag)
df$starting_bars_variable[is.na(df$starting_bars_variable)] <- 0
}
#Calculating the length of the bar for that section
temp_end <- df[,end] - as.numeric(as.character(df[,start]))
#Sections that are negative have to have a negative length
temp_end[as.numeric(as.character(df[,start]))<0] <- 0 - temp_end[as.numeric(as.character(df[,start]))<0]
#This column is the length of the bar section. The end column name is used so the x axis has the correct label
df[,end] <- temp_end
df <- data.frame(df)
starting_times <- sort(unique(df[,start]),decreasing = TRUE)
##Negative times need to be in backwards order to stack properly
starting_times[starting_times<0] <- rev(starting_times[starting_times<0])
df[,start] <- factor(df[,start],starting_times)
df[, id] <- factor(df[, id], levels = id_order)
ggplot2::ggplot(df) +
ggplot2::geom_col(position = "stack",
ggplot2::aes_string(fill = name_fill,col = name_col,alpha=name_alpha, group = start,x = id, y = end)) + ggplot2::coord_flip() +
ggplot2::theme_bw(base_size = base_size) +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank(),panel.grid.major = ggplot2::element_blank())
df
df <- data.frame(id=c(1,2,3,4,5),start=c(-5,-4,0,1,2),end=c(1,2,3,4,5),col=c(1,2,3,4,5))
swimmer_plot(df,name_fill='col')
swimmer_plot(df,name_fill='col')
