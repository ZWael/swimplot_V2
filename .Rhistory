results_trt_KPT <- data.frame(Treatment=levels(full_data0_MUT$Treatment_KPT)[-1], "Growth rate trt vs kpt"=
paste0(round(exp(intervals(fit_all_KPT)$fixed[c(5:6),2]),3),"(",
round(exp(intervals(fit_all_KPT)$fixed[c(5:6),1]),3),"-",
round(exp(intervals(fit_all_KPT)$fixed[c(5:6),3]),3),")"),pvalue=ps2)
results_trt_KPT <- results_trt_KPT[2,]
pred_gr <- exp(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))
if_200_at_baseline <- data.frame("Treatment"=levels(full_data0_MUT$Treatment),"Weekly growth"=round(pred_gr,3),"week1(day 7)"= exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*1),"week2(day 14)"=
exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*2), "week2(day 21)"=
exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*3))
names(results_trt_ref)[2] <- 'Growth rate treatment vs vehicle (95% CI)'
ptable(results_trt_ref)
names(results_trt_KPT)[2] <- 'Growth rate treatment vs KPT330 (95% CI)'
ptable(results_trt_KPT)
inter <- function(linfct){
m <- summary(glht(fit_all,linfct=linfct))
val <- round(exp(m$test$coefficients),3)
up <- round(exp(m$test$coefficients+qnorm(0.975)*m$test$sigma),3)
low <- round(exp(m$test$coefficients-qnorm(0.975)*m$test$sigma),3)
return(paste0(val,"(",low,"-",up,")"))
}
inter_trt <- function(trt="Vehicle"){
if(trt == "Vehicle" ){
linfct <- "week=0"
}else linfct <- paste0("week + week:Treatment",trt,"=0")
return(inter(linfct))
}
s <- data.frame("Treatment"=levels(full_data0_MUT$Treatment),"Weekly growth rate"=sapply(levels(full_data0_MUT$Treatment),inter_trt))
if_200_at_baseline$Weekly.growth <- s$Weekly.growth.rate
names(if_200_at_baseline)[2] <- 'Weekly growth rate (95% CI)'
ptable(if_200_at_baseline)
fit_patient <- function(patient){
fit_data <- full_data0[full_data0$Sample==patient,]
fit <- lme(log(size) ~  week*Treatment, data = fit_data,random = ~ 1 + week |id,method = "ML",control = ctrl)
return(fit)
}
All_models <- sapply(unique(full_data0$Sample),fit_patient,simplify = F)
get_coefs_sd <- function(sample){
model <- All_models[[sample]]
table <- summary(model)$tTable
keep <- table[grepl('week:',rownames(table)),]
rownames(keep) <- substr(rownames(keep),15,40)
save <- data.frame(Treatment=rownames(keep),keep[,c(1,2,5)],sample)
return(save)
}
all_results <- do.call(rbind.data.frame,sapply(names(All_models),get_coefs_sd,simplify = F))
pad <- p.adjust(all_results$p.value, method = 'fdr')
all_results$p.adjust <- pad
all_results$p.value <- NULL
all_results$significance1_adj <-  pad<0.05
all_results$significance2_adj <-  pad<0.01
all_results$significance3_adj <-  pad<0.005
all_results$significance4_adj <-  pad<0.001
all_results$star <- NA
all_results$star[all_results$significance1_adj==T] <- "\n\n\n*"
all_results$star[all_results$significance2_adj==T] <- "\n\n*\n*"
all_results$star[all_results$significance3_adj==T] <- "\n*\n*\n*"
all_results$star[all_results$significance4_adj==T] <- "*\n*\n*\n*"
all_results$expValue <- (exp(all_results$Value))
all_results$expValue_low <- (exp(all_results$Value-qnorm(0.975)*all_results$Std.Error))
all_results$expValue_high <- (exp(all_results$Value+qnorm(0.975)*all_results$Std.Error))
all_results$star_position <- all_results$expValue_high+0.03
colour_df <- data.frame(trt=levels(full_data$Treatment),col=c('black','#00A439','#0148EC','#FA0000','#FAA300'))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))+
ylab(expression(paste("This is a fraction: ", frac(foo, bar))))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))+
ylab(expression(paste(frac(Weekly growth rate treatment, Weekly growth rate Vehicle))))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))+
ylab(expression(paste(frac(Weekly growth rate treatment, Weekly growth rate Vehicle))))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))+
ylab(expression(paste(frac('Weekly growth rate treatment', 'Weekly growth rate Vehicle'))))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
#ylab('Treatment weekly growth rate vs Vehicle')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))+
ylab(expression(paste(frac('weekly growth rate treatment', 'weekly growth rate vehicle'))))
# Chunk 1
library(reportRx)
library(xlsx)
library(sas7bdat)
library(xtable)
library(ggplot2)
library(nlme)
library(Rmisc)
library(gridExtra)
library(foreign)
library(multcomp)
ctrl <- lmeControl(opt='optim',maxIter=20000,msMaxIter=20000)
ptable <- function(table,row=F,fix=T) {
if(fix==T) colnames(table) <- sanitizestr(colnames(table))
print.xtable(xtable(table),
include.rownames = F, sanitize.text.function = identity,
table.placement = "H")}
df_table <- function(t1,t2){
tab <- data.frame(table(t1,t2,useNA = 'always'))
return(tab[tab$Freq!=0,])
}
convert_week_day <- function(val,round=3){
return(round(exp(log(val)/7),round))
}
source('T:/Dept Staff Members/Jessica/Projects/Lung group/Ming Tsao/Josh/IND tumor growth/read.R')
options(stringsAsFactors = F)
full_data <- full_data[full_data$Sample != 'PHLC181',]
full_data$Treatment <- factor(full_data$Treatment,levels = c('Vehicle','Trametinib','KPT330',
'Erlotinib','Crizotinib'))
full_data$week <- full_data$day/7
# Chunk 2
##Cleaning the data to start at week 0 (or week -2 for PHLC119)
full_data0 <- full_data[(full_data$day>=0 & full_data$Sample!="PHLC119")|(full_data$day>=-2 & full_data$Sample=="PHLC119"),]
#
full_data0$Treatment <- relevel(full_data0$Treatment,ref='Vehicle')
full_data0$mut <- "MUT"
full_data0$mut[full_data0$Sample %in% c('PHLC137','PHLC148')] <- 'WT'
##Removing the wild types for the overall curves
full_data0_MUT <- full_data0[full_data0$mut=="MUT",]
fit_all <- lme(log(size) ~  week*Treatment, data = full_data0_MUT,random = ~ 1 + week |Sample/id,method = "ML",control = ctrl)
#Fitting with KPT330 as the reference
full_data0_MUT$Treatment_KPT <- relevel(full_data0_MUT$Treatment,ref='KPT330')
fit_all_KPT <- lme(log(size) ~  week*Treatment_KPT, data = full_data0_MUT,random = ~ 1 + week |Sample/id,method = "ML",control = ctrl)
##For plots
trts <- length(unique(full_data0$full_data0_MUT))
df <- data.frame(Treatment=rep(unique(full_data0_MUT$Treatment),each=100))
df$week <- NA
for(i in unique(full_data0$Treatment)){
df$week[df$Treatment==i] <- seq(0,7,length=100)
}
df$size <- exp(predict(fit_all, df, level = 0))
df$day <- df$week*7
full_data0_MUT$Treatment <- factor(full_data0_MUT$Treatment,levels=c('Vehicle','Trametinib','KPT330'))
full_data0_MUT$Treatment_KPT <- factor(full_data0_MUT$Treatment,levels=c('KPT330','Vehicle','Trametinib'))
colour_df <- data.frame(trt=levels(full_data0_MUT$Treatment),col=c('black','#00A439','#0148EC'))
star_df <- data.frame(size=c(680,370),Treatment=c('Trametinib','KPT330'),day=34,star="****")
ggplot(full_data0_MUT,aes(y=size,x=day,col=Treatment)) +
geom_line(size=1,alpha=0.1,aes(group=id))+
theme_classic(base_size = 16)+
xlab('Treatment day') +
geom_line(data=df,aes(y=size,x=day,col=Treatment),size=1.5)+
ggtitle("All samples")+ coord_cartesian(xlim=c(0,35)) +
scale_color_manual(breaks = as.character(colour_df$trt),values = as.character(colour_df$col))+
geom_text(data=star_df,aes(y=size,x=day,label=star),show.legend = F,size=7)+ ylab(expression(paste("Tumor Volume ( ",mm^3,")")))
####
ps <- sapply(summary(fit_all)$tTable[c(5:6),5],lpvalue)
ps2 <- sapply(summary(fit_all_KPT)$tTable[c(5:6),5],lpvalue)
results_trt_ref <- data.frame(Treatment=levels(full_data0_MUT$Treatment)[-1], "Growth rate trt vs vehicle"=
paste0(round(exp(intervals(fit_all)$fixed[c(5:6),2]),3),"(",
round(exp(intervals(fit_all)$fixed[c(5:6),1]),3),"-",
round(exp(intervals(fit_all)$fixed[c(5:6),3]),3),")"),pvalue=ps)
results_trt_KPT <- data.frame(Treatment=levels(full_data0_MUT$Treatment_KPT)[-1], "Growth rate trt vs kpt"=
paste0(round(exp(intervals(fit_all_KPT)$fixed[c(5:6),2]),3),"(",
round(exp(intervals(fit_all_KPT)$fixed[c(5:6),1]),3),"-",
round(exp(intervals(fit_all_KPT)$fixed[c(5:6),3]),3),")"),pvalue=ps2)
results_trt_KPT <- results_trt_KPT[2,]
pred_gr <- exp(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))
##JUST an example###
# IF the sample is at 200mm^3 at baseline
if_200_at_baseline <- data.frame("Treatment"=levels(full_data0_MUT$Treatment),"Weekly growth"=round(pred_gr,3),"week1(day 7)"= exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*1),"week2(day 14)"=
exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*2), "week2(day 21)"=
exp(log(200)+(intervals(fit_all)$fixed[2,2]+c(0,(intervals(fit_all)$fixed[c(5:6),2])))*3))
# plot(fit_all,resid(.,type="p")~fitted(.), id = 0.0002,adj=-0.1,cex=0.7,main=i)
# plot(fit_all,resid(.,type="p")~fitted(.)|Treatment, id = 0.0002,adj=-0.1,cex=0.7,main=i)
# qqnorm(fit_all,main= i,id=0.0001,cex=0.8,adj=-0.1)
# Chunk 3
names(results_trt_ref)[2] <- 'Growth rate treatment vs vehicle (95% CI)'
ptable(results_trt_ref)
# Chunk 4
names(results_trt_KPT)[2] <- 'Growth rate treatment vs KPT330 (95% CI)'
ptable(results_trt_KPT)
# Chunk 5
inter <- function(linfct){
m <- summary(glht(fit_all,linfct=linfct))
val <- round(exp(m$test$coefficients),3)
up <- round(exp(m$test$coefficients+qnorm(0.975)*m$test$sigma),3)
low <- round(exp(m$test$coefficients-qnorm(0.975)*m$test$sigma),3)
return(paste0(val,"(",low,"-",up,")"))
}
inter_trt <- function(trt="Vehicle"){
if(trt == "Vehicle" ){
linfct <- "week=0"
}else linfct <- paste0("week + week:Treatment",trt,"=0")
return(inter(linfct))
}
s <- data.frame("Treatment"=levels(full_data0_MUT$Treatment),"Weekly growth rate"=sapply(levels(full_data0_MUT$Treatment),inter_trt))
if_200_at_baseline$Weekly.growth <- s$Weekly.growth.rate
names(if_200_at_baseline)[2] <- 'Weekly growth rate (95% CI)'
ptable(if_200_at_baseline)
# Chunk 6
fit_patient <- function(patient){
fit_data <- full_data0[full_data0$Sample==patient,]
fit <- lme(log(size) ~  week*Treatment, data = fit_data,random = ~ 1 + week |id,method = "ML",control = ctrl)
return(fit)
}
All_models <- sapply(unique(full_data0$Sample),fit_patient,simplify = F)
# Chunk 7
get_coefs_sd <- function(sample){
model <- All_models[[sample]]
table <- summary(model)$tTable
keep <- table[grepl('week:',rownames(table)),]
rownames(keep) <- substr(rownames(keep),15,40)
save <- data.frame(Treatment=rownames(keep),keep[,c(1,2,5)],sample)
return(save)
}
all_results <- do.call(rbind.data.frame,sapply(names(All_models),get_coefs_sd,simplify = F))
pad <- p.adjust(all_results$p.value, method = 'fdr')
all_results$p.adjust <- pad
all_results$p.value <- NULL
all_results$significance1_adj <-  pad<0.05
all_results$significance2_adj <-  pad<0.01
all_results$significance3_adj <-  pad<0.005
all_results$significance4_adj <-  pad<0.001
all_results$star <- NA
all_results$star[all_results$significance1_adj==T] <- "\n\n\n*"
all_results$star[all_results$significance2_adj==T] <- "\n\n*\n*"
all_results$star[all_results$significance3_adj==T] <- "\n*\n*\n*"
all_results$star[all_results$significance4_adj==T] <- "*\n*\n*\n*"
all_results$expValue <- (exp(all_results$Value))
all_results$expValue_low <- (exp(all_results$Value-qnorm(0.975)*all_results$Std.Error))
all_results$expValue_high <- (exp(all_results$Value+qnorm(0.975)*all_results$Std.Error))
all_results$star_position <- all_results$expValue_high+0.03
colour_df <- data.frame(trt=levels(full_data$Treatment),col=c('black','#00A439','#0148EC','#FA0000','#FAA300'))
ggplot(data=all_results,aes(x=sample,y=expValue,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 0.75)) +
geom_errorbar(aes(ymin=expValue_low,ymax=expValue_high),width=0.5,lwd=1.05,position = position_dodge(width = 0.75))+
theme_bw(base_size = 22)+scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=8,position = position_dodge(width = 0.75),lineheight=0.4)+
ylab(expression(paste(frac('weekly growth rate treatment', 'weekly growth rate vehicle'))))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_results$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL) +
expand_limits(x= c(-1, 5))
+ ggtitle(expression(paste("This is a fraction: ", frac(foo, bar))))
all_results$growth_rate <- paste0(round(all_results$expValue,3),"(",round(all_results$expValue_low,3),"-",round(all_results$expValue_high,3),")")
save <- all_results[,c("sample","Treatment","growth_rate")]
save$p.value.adj <- sapply(pad,lpvalue)
names(save)[3] <- "Growth rate (95% CI)"
# Chunk 8
names(save)[4] <- 'Adjusted p-value'
ptable(save)
# Chunk 9
inter_ind <- function(linfct,mod){
m <- summary(glht(mod,linfct=linfct))
val <- round(exp(m$test$coefficients),3)
up <- round(exp(m$test$coefficients+qnorm(0.975)*m$test$sigma),3)
low <- round(exp(m$test$coefficients-qnorm(0.975)*m$test$sigma),3)
return(c(val=val,up=up,low=low))
}
inter_trt_ind <- function(trt="Vehicle",mod){
if(trt == "Vehicle" ){
linfct <- "week=0"
}else linfct <- paste0("week + week:Treatment",trt,"=0")
return(inter_ind(linfct,mod=mod))
}
inter_trt_phlc <- function(phlc){
mod_phlc <- All_models[[phlc]]
save <- cbind(sample=phlc,"Treatment"=unique(mod_phlc$data$Treatment),do.call(rbind.data.frame,sapply(unique(mod_phlc$data$Treatment),inter_trt_ind,mod=mod_phlc,simplify = F)))
names(save)[3:5] <- c('val','up','low')
return(save)
}
all_pred <- do.call(rbind.data.frame,sapply(names(All_models), inter_trt_phlc,simplify = F))
all_results <- all_results[,c("sample",'Treatment','star')]
all_pred2 <- merge(all_pred,all_results,all=T)
all_pred2$star_position <- all_pred2$up +0.1
all_pred2$Treatment <- factor(all_pred2$Treatment,levels=c('Vehicle','KPT330', 'Trametinib',  'Erlotinib', 'Crizotinib'))
ggplot(data=all_pred2,aes(x=sample,y=val,col=Treatment)) +
geom_point(cex=2,position = position_dodge(width = 1.5)) +
geom_errorbar(aes(ymin=low,ymax= up),width=1,lwd=1.05,position = position_dodge(width = 1.5))+
theme_bw(base_size = 22)+
scale_color_manual(values = as.character(colour_df$col),breaks = as.character(colour_df$trt))+
ylab('Weekly growth rates')+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
scale_x_discrete(limits=c(all_pred$sample))+
theme(legend.position = "top",legend.box = "vertical")+
labs(colour = NULL)+
geom_text(aes(y=star_position,label=star),show.legend = F,cex=7,position = position_dodge(width = 1.5),lineheight=0.4)+
expand_limits(x= c(-1, 5))
all_results2 <- NULL
fit_patient2 <- function(patient){
fit_data <- full_data0[full_data0$Sample==patient,]
fit_data$Treatment <- factor(fit_data$Treatment,levels=c('KPT330', 'Erlotinib', 'Crizotinib', 'Vehicle', 'Trametinib'))
fit <- lme(log(size) ~  week*Treatment, data = fit_data,random = ~ 1 + week |id,method = "ML",control = ctrl)
return(fit)
}
All_models_KPT330 <- sapply(unique(full_data0$Sample),fit_patient2,simplify = F)
get_coefs_sd2 <- function(sample){
model <- All_models_KPT330[[sample]]
table <- summary(model)$tTable
keep <- table[grepl('week:',rownames(table)),]
rownames(keep) <- substr(rownames(keep),15,40)
save <- data.frame(Treatment=rownames(keep),keep[,c(1,2,5)],sample)
return(save)
}
all_results2 <- do.call(rbind.data.frame,sapply(names(All_models_KPT330),get_coefs_sd2,simplify = F))
all_results2$adjusted <- p.adjust(all_results2$p.value, method = 'fdr')
all_results2$expValue <- (exp(all_results2$Value))
all_results2$expValue_low <- (exp(all_results2$Value-qnorm(0.975)*all_results2$Std.Error))
all_results2$expValue_high <- (exp(all_results2$Value+qnorm(0.975)*all_results2$Std.Error))
all_results2$growth_rate_vs_vehicle_se <- paste0(round(all_results2$expValue,3),"(",round(all_results2$expValue_low,3),",",round(all_results2$expValue_high,3),")")
save <- all_results2[,c("sample","Treatment","growth_rate_vs_vehicle_se")]
save$p.value.adj <- sapply(p.adjust(all_results2$p.value, method = 'fdr'),lpvalue)
names(save)[3] <- "Growth rate Trametinib vs KPT330 (95% CI)"
names(save)[4] <- 'Adjusted p-value'
ptable(save[save$Treatment != "Vehicle",])
test <- function(phlc){
temp <- data.frame('week.TreatmentCrizotinib'=NA,'week.TreatmentErlotinib'=NA,'week.TreatmentTrametinib'=NA,'week.TreatmentKPT330'=NA)
mod <- All_models[[phlc]]
df <- data.frame(phlc=phlc,t(data.frame(value=summary(mod)$tTable[grepl('week',rownames(summary(mod)$tTable)),1])))
df[names(temp)[!names(temp) %in% names(df)]] <- NA
save <- df
return(data.frame(save))
}
all_diff <- do.call(rbind,sapply(unique(full_data0$Sample),test,simplify = F))
names(all_diff) <- c('phlc','B1','B2_Trametinib','B2_KPT330','B2_Crizotinib','B2_Erlotinib')
all_diff$B2_B1_Trametinib <-  all_diff$B2_Trametinib/all_diff$B1
all_diff$B2_B1_KPT <-  all_diff$B2_KPT/all_diff$B1
#Extra indvidual plots 2020-10-20
plot_model <- function(model,start=0,alpha=0.1,linetype=2){
data <- full_data[full_data$Sample==model,]
if(!is.null(start)) data <- data[data$week>=start,]
cols <- colour_df[colour_df$trt %in% data$Treatment,]
###Getting predictions
mod <- All_models[[model]]
trts <- length(unique(data$Treatment))
df <- data.frame(Treatment=rep(unique(data$Treatment),each=100))
df$week <- NA
for(i in unique(data$Treatment)){
df$week[df$Treatment==i] <- seq(0,max(data$week[data$Treatment==i]),length=100)
}
df$size <- exp(predict(mod, df, level = 0))
df$day <- df$week*7
breaks <- c(0,250,500,750,1000)
if(max(data$size) > 1000) breaks <- c(0,300,600,900,1200)
if(max(data$size) > 1200) breaks <- c(0,500,1000,1500,2000)
##All lines + predicted
plot <- ggplot(data,aes(y=size,x=day,col=Treatment)) +
geom_line(size=1,alpha=alpha,aes(group=id),linetype=linetype) +
geom_point(alpha=alpha)+
theme_classic(base_size = 16)+
xlab('Treatment day') +
scale_color_manual(breaks = as.character(cols$trt),values = as.character(cols$col)) +
geom_line(data=df,aes(y=size,x=day,col=Treatment),size=1.5)+
ggtitle(model)+ scale_y_continuous(breaks=breaks,limits = c(0,max(c(breaks,data$size))))+
theme(legend.position="top")+
theme(plot.title = element_text(hjust = 0.5))+labs(col="")
return(plot)
}
ll <- sapply(unique(full_data$Sample), plot_model,simplify = FALSE)
do.call("grid.arrange", c(ll[c(1:4)], ncol=2))
do.call("grid.arrange", c(ll[c(5:8)], ncol=2))
do.call("grid.arrange", c(ll[c(9:12)], ncol=2))
ll <- sapply(unique(full_data$Sample), linetype=1,alpha=0.08,plot_model,simplify = FALSE)
do.call("grid.arrange", c(ll[c(1:4)], ncol=2))
do.call("grid.arrange", c(ll[c(5:8)], ncol=2))
do.call("grid.arrange", c(ll[c(9:12)], ncol=2))
starting_at_200 <- function(phlc){
fit <- All_models[[phlc]]
coefs <- intervals(fit)$fixed
use <- data.frame(coefs[grepl('week', rownames(coefs), fixed = TRUE),])
use$rate <- use$est.+ use$est.[1]
use$rate[1] <- use$est.[1]
use$Predicted_week_1 <- round(exp(log(200)+use$rate*1),1)
use$Predicted_week_2 <- round(exp(log(200)+use$rate*2),1)
use$Predicted_week_3 <- round(exp(log(200)+use$rate*3),1)
names <- rownames(use)
names[1] <- 'Vehicle'
names <- gsub("week:Treatment", "", names)
save <- rbind(c(phlc,"","",""),cbind(Treatment=names,use[,c('Predicted_week_1','Predicted_week_2',"Predicted_week_3")]),c("","","",""))
return(save)
}
ptable(do.call(rbind.data.frame,sapply(names(All_models),starting_at_200,simplify=FALSE)))
data_codon <- full_data0[!is.na(full_data0$codon) & full_data0$codon %in% c('G12D','G12C'),]
data_codon$Treatment <- droplevels(data_codon$Treatment)
fit_codon <- lme(log(size) ~  week*codon*Treatment, data = data_codon,random = ~ 1 + week |Sample/id,method = "ML",control = ctrl)
pt = round(summary(fit_codon)$tTable['week:codonG12D:TreatmentTrametinib',5],2)
pk = round(summary(fit_codon)$tTable['week:codonG12D:TreatmentKPT330',5],2)
inter_codon <- function(linfct){
if(is.na(linfct)) return(1)
m <- summary(glht(fit_codon,linfct=linfct))
val <- round(exp(m$test$coefficients),3)
up <- round(exp(m$test$coefficients+qnorm(0.975)*m$test$sigma),3)
low <- round(exp(m$test$coefficients-qnorm(0.975)*m$test$sigma),3)
return(data.frame(comp=linfct,val=val,low=low,up=up))
}
all_comps <- c("week=0",
"week+week:TreatmentTrametinib=0",
"week+week:TreatmentKPT330=0",
"week+week:codonG12D=0",
"week+week:codonG12D+week:TreatmentTrametinib+week:codonG12D:TreatmentTrametinib=0",
"week+week:codonG12D+week:TreatmentKPT330+week:codonG12D:TreatmentKPT330=0")
estimates <- do.call(rbind.data.frame,sapply(all_comps,inter_codon,simplify = FALSE))
estimates$Treatment <- 'Vehicle'
estimates$Treatment[grepl('Trametinib',estimates$comp)] <- 'Trametinib'
estimates$Treatment[grepl('KPT330',estimates$comp)] <- 'KPT330'
estimates$codon <- 'G12C'
estimates$codon[grepl('G12D',estimates$comp)] <- 'G12D'
ggplot(estimates,aes(x=codon,color=Treatment,y=val)) + geom_point(cex=4,position = position_dodge(width = 0.4)) +
theme_bw(base_size = 22)+ geom_errorbar(aes(ymin=low,ymax= up),width=.25,lwd=1,position = position_dodge(width = 0.4))+
ylab('Weekly growth rates') +  scale_color_manual(values = as.character(colour_df$col)[1:3],breaks = as.character(colour_df$trt)[1:3]) +
theme(legend.position = "top",legend.box = "vertical")
all_comps2 <- c(NA,
"week:TreatmentTrametinib=0",
"week:TreatmentKPT330=0",
NA,
"week:TreatmentTrametinib+week:codonG12D:TreatmentTrametinib=0",
"week:TreatmentKPT330+week:codonG12D:TreatmentKPT330=0")
estimates <- do.call(rbind.data.frame,sapply(all_comps2,inter_codon,simplify = FALSE))
estimates$Treatment <- 'Vehicle'
estimates$Treatment[grepl('Trametinib',estimates$comp)] <- 'Trametinib'
estimates$Treatment[grepl('KPT330',estimates$comp)] <- 'KPT330'
estimates$codon <- 'G12C'
estimates$codon[grepl('G12D',estimates$comp)] <- 'G12D'
estimates$Treatment[estimates$Treatment=="Vehicle"] <- NA
estimates <- estimates[estimates$val!=1,]
ggplot(estimates,aes(x=codon,color=Treatment,y=val)) + geom_point(cex=4,position = position_dodge(width = 0.4)) +
theme_bw(base_size = 22)+ geom_errorbar(aes(ymin=low,ymax= up),width=.25,lwd=1,position = position_dodge(width = 0.4)) +
scale_color_manual(values = as.character(colour_df$col)[1:3],breaks = as.character(colour_df$trt)[1:3]) +
theme(legend.position = "top",legend.box = "vertical")+
ylab('Treatment weekly growth rate vs Vehicle')
ggplot(estimates,aes(x=codon,color=Treatment,y=val)) + geom_point(cex=4,position = position_dodge(width = 0.4)) +
theme_bw(base_size = 22)+ geom_errorbar(aes(ymin=low,ymax= up),width=.25,lwd=1,position = position_dodge(width = 0.4)) +
scale_color_manual(values = as.character(colour_df$col)[1:3],breaks = as.character(colour_df$trt)[1:3]) +
theme(legend.position = "top",legend.box = "vertical")+
ylab(expression(paste(frac('weekly growth rate treatment', 'weekly growth rate vehicle'))))
devtools::build()
devtools::build()
devtools::build_manual()
devtools::build()
devtools::build_manual()
devtools::document()
devtools::build()
devtools::build_manual()
devtools::build_manual()
devtools::document()
devtools::build()
devtools::build_manual()
devtools::build()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build()
library(usethis)
use_git_config(use.name="JessicaWeiss",user.email="jessica.weiss@uhnresearch.ca")
use_git_config()
library(usethis)
use_git_config(use.name="JessicaWeiss",user.email="jessica.weiss@uhnresearch.ca")
