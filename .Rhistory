low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")+
swimmer_points(df=ae,name_shape = "grade",size=4,col="white",stroke=2)+
scale_shape_manual(name="AE grade",values=c("1"="1","2"='2',"3"='3',"4"='4','5'='5'),
guide=guide_legend(ncol=4,order=3,override.aes = list(col=1)),
labels=c("1"="Mild","2"='Moderate',"3"='Severe',"4"='Life-threatening','5'='death'))
swim_plot_pattern(df=df,col="black",name_fill='pre_study_treatment',name_pattern = 'pre_study_treatment',name_pattern_fill = 'pre_study_treatment',pattern_density=0.5)+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey90','Surgery'='grey90','Nothing'='white')
,breaks=c('Radiation','Surgery','Radiation+Surgery','Nothing'))+
scale_pattern_manual(name="Pre study Treatment",values = c('Radiation'='none','Surgery'='none','Nothing'='none','Radiation+Surgery'='stripe')
,breaks=c('Radiation','Surgery','Radiation+Surgery','Nothing')) +
scale_pattern_fill_manual(name="Pre study Treatment",values = c('Radiation'='white','Surgery'='white','Nothing'='white','Radiation+Surgery'='grey30')
,breaks=c('Radiation','Surgery','Radiation+Surgery','Nothing'))+
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA)),pattern_fill=guide_legend(order = 1,ncol=4),pattern=guide_legend(order = 1,ncol=4))+
#guides(fill = guide_legend(order = 1,ncol=4,))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")+
swimmer_points(df=ae,name_shape = "grade",size=4,col="white",stroke=2)+
scale_shape_manual(name="AE grade",values=c("1"="1","2"='2',"3"='3',"4"='4','5'='5'),
guide=guide_legend(ncol=4,order=3,override.aes = list(col=1)),
labels=c("1"="Mild","2"='Moderate',"3"='Severe',"4"='Life-threatening','5'='death'))
full_treatment <- data.frame(id=c(1,1,1,1,1,1,1,1,2,3,3,3,4,4,4),
treatment=c('Brigatinib','Brigatinib','Brigatinib','Brigatinib','Brigatinib',
'Crizotinib','Crizotinib','Crizotinib','Brigatinib',
'Ceritinib','Ceritinib','Ceritinib','Brigatinib','Crizotinib','Ceritinib'),
dose=c(750,700,650,600,500,90,120,180,750,150,100,50,750,120,50), start=c(2,3,4,6,7,10,13,15,0,0,3,5,1,4,6),end=c(3,4,6,7,8,13,15,17,15,3,5,9,2.5,5,8))
ae <- data.frame(id=c(1,1,1,1,1,2,3,3,4,4,4),grade=c("1","2","3","3","4","5",'2','2','3','3','5'),time=c(3,4,6,7,8,15,3,5,2.5,5,8),
type=c("Fever",'Nausea',"Fever","Fever","Fever","Infection",'Nausea',"Fever","Infection","Infection","Infection"))
df <- data.frame(id=c(1,2,3,4,5,6),end=c(17,15,12,8,6,4),pre_study_treatment=factor(c('Surgery',
'Radiation+Surgery',
'Surgery',
'Radiation+Surgery',
'Radiation',
'Nothing')))
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")+
swimmer_points(df=ae,name_shape = "grade",size=4,col="white",stroke=2)+
scale_shape_manual(name="AE grade",values=c("1"="1","2"='2',"3"='3',"4"='4','5'='5'),
guide=guide_legend(ncol=4,order=3,override.aes = list(col=1)),
labels=c("1"="Mild","2"='Moderate',"3"='Severe',"4"='Life-threatening','5'='death'))
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))+
new_scale("shape")
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment,name_col = 'dose',size=15)
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment,name_col = 'dose',size=15)+
swimmer_points(df=ae,name_shape = "type",size=8)
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))
```{r, echo = TRUE,fig.align='centre',fig.width=11}
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))
swimmer_plot(df=df,col="black",name_fill='pre_study_treatment')+ scale_fill_manual(name="Pre study Treatment",values = c('Radiation'='grey30','Radiation+Surgery'='grey60','Surgery'='grey90','Nothing'='white'),
breaks=c('Radiation',
'Surgery',
'Radiation+Surgery',
'Nothing'))+
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Crizotinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Crizotinib(mg)",low = "#FEF0D9", high = "#E34A33")+
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Brigatinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Brigatinib(mg)",
low = "#9ECAE1", high = "#084594") +
new_scale("colour") +
swimmer_lines(df_lines = full_treatment[full_treatment$treatment=="Ceritinib",],name_col = 'dose',size=15)+
scale_colour_gradient("Ceritinib(mg)",
low = "#C7E9C0", high = "#005A32") +
guides(fill = guide_legend(order = 1,ncol=4,override.aes = list(shape = NA,col=NA))) +
swimmer_points(df=ae,name_shape = "type",size=8)+
scale_shape_manual(name="AE",values=c("Fever"=19,'Nausea'=15,'Infection'=17),guide=guide_legend(ncol=3,order=2))
devtools::build()
devtools::build()
devtools::document()
devtools::document()
options(stringsAsFactors = F)
library(sas7bdat)
library(xlsx)
library(dplyr)
library(DescTools)
df_table <- function(t1,t2){
tab <- data.frame(table(t1,t2,useNA = 'always'))
return(tab[tab$Freq!=0,])
}
setwd('H:/Rave_Studies/STUDYID_MET4_IO/Data/sasfiles/2021_03_15')
eligibility <- read.sas7bdat('eligibility.sas7bdat')
random <- read.sas7bdat('random.sas7bdat')
off_treatment <- read.sas7bdat('off_treatment.sas7bdat')
course_id <-read.sas7bdat('course_id.sas7bdat')
recist_v_1_1 <- read.sas7bdat('recist_v_1_1.sas7bdat')
ae_v5 <-read.sas7bdat('ae_v5.sas7bdat')
# eligibility and group -------------------------------------------------------------------------
group_df <- eligibility[,c('Subject','PT_ELIG_IND_3','PROT_TX_ARM_ASSI_TP','PROT_TX_ARM_ASSI_TP_D')]
group_df$Group <- group_df$PROT_TX_ARM_ASSI_TP
group_df$Group[group_df$PROT_TX_ARM_ASSI_TP_D=="Yes"] <- "Group D"
group_df$PROT_TX_ARM_ASSI_TP <- group_df$PROT_TX_ARM_ASSI_TP_D <- NULL
names(group_df)[2] <- 'eligible'
# Treatment ---------------------------------------------------------------
random_df <- random[,c('Subject','TX_COHORT_IND')]
# start treatment date ----------------------------------------------------
table(course_id$InstanceName)
cycle1_df <- course_id[course_id$InstanceName=="Cycle 01",c('Subject','TX_STT_DT_RAW', 'TX_STT_DT_INT')]
cycle1_df$Cycle1_date <- as.Date(cycle1_df$TX_STT_DT_INT,origin = '1960-01-01')
cycle1_df$TX_STT_DT_RAW <- NULL
names(cycle1_df)[2] <- 'Cycle1_raw'
# End treatment date and reason -------------------------------------------
# Start and end treatment
off_treatment$Off_trt_date <- as.Date(off_treatment$OTX_DATE_INT,origin = '1960-01-01')
off_treatment$Off_trt_reason <- off_treatment$OFF_TX_RSN_SPEC
table(off_treatment$OTX_CD[off_treatment$Off_trt_reason==""])
table(off_treatment$OTX_CD[off_treatment$Off_trt_reason!=""])
off_treatment$Off_trt_reason[off_treatment$Off_trt_reason==""] <- off_treatment$OTX_CD[off_treatment$Off_trt_reason==""]
off_treatment_df <- off_treatment[,c('Subject','OTX_DATE_INT','Off_trt_reason','Off_trt_date')]
# End of all cycles -------------------------------------------------------
cycle_end <- course_id[,c('Subject','InstanceName','STOP_DT_INT')]
no_cycle_end <-  course_id[is.na(course_id$STOP_DT_INT),c('Subject','InstanceName','TX_STT_DT_INT')]
# Best response -----------------------------------------------------------
View(recist_v_1_1)
table(recist_v_1_1$NEO_IRECIST_OVR_TYP_STD)
table(recist_v_1_1$OVERALL_LES_RESP_TP_STD)
unique(recist_v_1_1[,c('Subject','NEO_IRECIST_OVR_TYP_STD','OVERALL_LES_RESP_TP_STD')])
iresist <- unique(recist_v_1_1[,c('Subject','NEO_IRECIST_OVR_TYP_STD','IMG_PROC_DT_RAW','IMG_PROC_DT_INT')])
iresist <- iresist[iresist$NEO_IRECIST_OVR_TYP_STD!="",]
iresist$resist_relabeled <- dplyr::recode(iresist$NEO_IRECIST_OVR_TYP_STD, iCPD=1,  iCR=4,  iPR=2,  iSD=3, iUPD=1,   NE=0)
table(iresist$resist_relabeled,iresist$NEO_IRECIST_OVR_TYP_STD,useNA = 'always')
resist <- unique(recist_v_1_1[,c('Subject','OVERALL_LES_RESP_TP','IMG_PROC_DT_RAW','IMG_PROC_DT_INT')])
table(resist$OVERALL_LES_RESP_TP)
# Progression from resist date ------------------------------------------------------
resist_PD <- unique(resist[resist$OVERALL_LES_RESP_TP=="PD",])
# Progression from iresist date ------------------------------------------------------
##First progression date iCPD
head(iresist)
iresist_iCPD <- unique(iresist[iresist$NEO_IRECIST_OVR_TYP_STD=="iCPD",])
##First progression date iUPD
iresist_iUPD <- unique(iresist[iresist$NEO_IRECIST_OVR_TYP_STD=="iUPD",])
iresist_iUPD[order(iresist_iUPD$Subject),]
# Creating dataframes for a swimmers plot ---------------------------------
list_m <- list(group_df,random_df,cycle1_df,cycle_end)
data_bars <- Reduce(function(x, y) merge(x, y, all=TRUE), list_m) #merging them all by mrn
data_bars$TX_COHORT_IND[data_bars$Group=="Group A"] <- "Treatment"
data_bars$end <- data_bars$STOP_DT_INT-data_bars$Cycle1_raw
data_bars$stat <- 0
##Arrows
data_arrows <- Reduce(function(x, y) merge(x, y, all=T), list(random_df,no_cycle_end,cycle1_df))
data_arrows <- data_arrows[!is.na(data_arrows$TX_STT_DT_INT),]
data_arrows$end <- data_arrows$TX_STT_DT_INT-data_arrows$Cycle1_raw
##End of treatment
data_end_of_trt <- Reduce(function(x, y) merge(x, y, all=T), list(cycle1_df,off_treatment_df))
data_end_of_trt$time <-  data_end_of_trt$OTX_DATE_INT-data_end_of_trt$Cycle1_raw
#iresist_iCPD
iresist_iCPD_df <- Reduce(function(x, y) merge(x, y, all=F), list(cycle1_df,iresist_iCPD))
iresist_iCPD_df$start <-  iresist_iCPD_df$IMG_PROC_DT_INT-iresist_iCPD_df$Cycle1_raw
#iresist_iUPD
iresist_iUPD_df <- Reduce(function(x, y) merge(x, y, all=F), list(cycle1_df,iresist_iUPD))
iresist_iUPD_df$start <-  iresist_iUPD_df$IMG_PROC_DT_INT-iresist_iUPD_df$Cycle1_raw
##resist
resist_PD_df <- Reduce(function(x, y) merge(x, y, all=F), list(cycle1_df,resist_PD))
resist_PD_df$start <-  resist_PD_df$IMG_PROC_DT_INT-resist_PD_df$Cycle1_raw
# Creating the plot -------------------------------------------------------
#remotes::install_github("biostatsPMH/swimplot@develop")
devtools::install_github("biostatsPMH/swimplot", ref="develop")
library(swimplot)
library(ggplot2)
o <- unique(eligibility$Subject)
data_bars$end[is.na(data_bars$end)] <- 0
data_bars2 <- merge(data_bars,off_treatment_df,all=T)
data_bars2$Off_trt_reason[is.na(data_bars2$Off_trt_reason)] <- "No off treatment"
a <- unique(data_bars2[,c('Subject','Off_trt_reason')])
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order=a$Subject[order(a$Off_trt_reason)])+
swimmer_arrows(df=data_arrows,id = 'Subject',arrow_positions = c(1,10),name_col = 'TX_COHORT_IND')+
swimmer_points(df=data_end_of_trt[!is.na(data_end_of_trt$time),],id='Subject',name_shape = 'Off_trt_reason',size=3,stroke=1.5)+
swimmer_text(df_text = iresist_iCPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='red',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = iresist_iUPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='blue',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = resist_PD_df,id = 'Subject',label = 'OVERALL_LES_RESP_TP',adj.x = -5,col='Purple',adj.y = -0.3, fontface = "bold",size=3)+
scale_shape_manual(values=c(12,13,8,15,16,17,11))  +
#scale_y_continuous(name="Time on treatment (months)",breaks=seq(0,400,by=12),labels = seq(0,400,by=12)/12)+
guides(fill = guide_legend(override.aes = list(shape = NA)),
alpha = guide_legend(override.aes = list(shape = NA,col="NA")),
color=FALSE) + labs(alpha="Time on cycle")
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order=rev(unique(data_bars2$Subject)))+
swimmer_arrows(df=data_arrows,id = 'Subject',arrow_positions = c(1,10),name_col = 'TX_COHORT_IND')+
swimmer_points(df=data_end_of_trt[!is.na(data_end_of_trt$time),],id='Subject',name_shape = 'Off_trt_reason',size=3,stroke=1.5)+
swimmer_text(df_text = iresist_iCPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='red',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = iresist_iUPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='blue',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = resist_PD_df,id = 'Subject',label = 'OVERALL_LES_RESP_TP',adj.x = -5,col='Purple',adj.y = -0.3, fontface = "bold",size=3)+
scale_shape_manual(values=c(12,13,8,15,16,17,11))  +
scale_y_continuous(name="Time on treatment (months)",breaks=seq(0,400,by=30),labels = seq(0,400,by=30)/30)+
guides(fill = guide_legend(override.aes = list(shape = NA)),
alpha = guide_legend(override.aes = list(shape = NA,col="NA")),
color=FALSE) + labs(alpha="Time on cycle")
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',stratify =  "Off_trt_reason")
# -------------------------------------------------------------------------
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order=a$Subject[order(a$Off_trt_reason)])
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Off_trt_reason')
data_bars2[data_bars2$eligible=="Yes",]
a <- data_bars2[data_bars2$eligible=="Yes",]
table(a$Off_trt_reason,a$Subject)
unique(a$Off_trt_reason,a$Subject)
unique(a[,c('Subject','Off_trt_reason')])
b <- unique(a[,c('Subject','Off_trt_reason')])
table(b$Subject)
data_bars2[data_bars2$eligible=="Yes",]
id='Subject'
end = 'end'
col=1
name_alpha = 'end'
name_fill='TX_COHORT_IND'
id_order='Off_trt_reason
id_order='Off_trt_reason'
id_order='Off_trt_reason'
df[,id] <- as.character(df[,id])
df
df=data_bars2[data_bars2$eligible=="Yes",]
df[,id] <- as.character(df[,id])
if(is.null(id_order)){
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
if(increasing) {id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID),id]
}else id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID,decreasing = T),id]
}
id_order
(id_order[1] %in% names(df))
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
max_df
table(max_df$`df[, id]`)
table(table(max_df$`df[, id]`))
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
increasing
increasing = T
starting_information[order(starting_information[,id_order[1]], -rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
if (id_order[1] %in% names(df)) {
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
if(increasing) {id_order <- starting_information[order(starting_information[,id_order[1]], -rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}else id_order <- starting_information[order(starting_information[,id_order[1]], rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}
df <- df[order(df[,id],df[,end]),]
##Filling in any gaps (Adding empty bars at 0 and between sections)
if(start %in% names(df)){
add_in <- function(id_fix,df,start,end){
df_fix <- df[df[,id]==id_fix,]
end_blank <- df_fix[,start][c(0,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
start_blank <- c(0,dplyr::lag(df_fix[,end])[-1])[c(0,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
df_fixed <- data.frame(id_fix,start_blank,end_blank)
names(df_fixed) <- c(id,start,end)
merge(df_fixed,df_fix,all=T)
}
df <- do.call(rbind.data.frame,sapply(unique(df[,id]), add_in,df=df,start=start,end=end,simplify = F))
}else {
start = 'starting_bars_variable'
df$starting_bars_variable <- stats::ave(df[,end], df[,id], FUN=dplyr::lag)
df$starting_bars_variable[is.na(df$starting_bars_variable)] <- 0
}
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Off_trt_reason')
data_bars2[data_bars2$eligible=="Yes",]
df;id='id';end='end';start='start';name_fill=NULL;name_col=NULL;name_alpha=NULL;increasing=TRUE;id_order = NULL;stratify=FALSE;base_size=11
df=data_bars2[data_bars2$eligible=="Yes",];id='Subject';end = 'end';col=1;name_alpha = 'end';
name_fill='TX_COHORT_IND';id_order='Off_trt_reason'
df[,id] <- as.character(df[,id])
if(is.null(id_order)){
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
if(increasing) {id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID),id]
}else id_order <-  max_df[order(max_df$MAX_TIME_FOR_EACH_ID,decreasing = T),id]
}
if (id_order[1] %in% names(df)) {
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
if(increasing) {id_order <- starting_information[order(starting_information[,id_order[1]], -rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}else id_order <- starting_information[order(starting_information[,id_order[1]], rank(starting_information$MAX_TIME_FOR_EACH_ID), decreasing = TRUE),id]
}
df <- df[order(df[,id],df[,end]),]
##Filling in any gaps (Adding empty bars at 0 and between sections)
if(start %in% names(df)){
add_in <- function(id_fix,df,start,end){
df_fix <- df[df[,id]==id_fix,]
end_blank <- df_fix[,start][c(0,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
start_blank <- c(0,dplyr::lag(df_fix[,end])[-1])[c(0,dplyr::lag(df_fix[,end])[-1]) != df_fix[,start]]
df_fixed <- data.frame(id_fix,start_blank,end_blank)
names(df_fixed) <- c(id,start,end)
merge(df_fixed,df_fix,all=T)
}
df <- do.call(rbind.data.frame,sapply(unique(df[,id]), add_in,df=df,start=start,end=end,simplify = F))
}else {
start = 'starting_bars_variable'
df$starting_bars_variable <- stats::ave(df[,end], df[,id], FUN=dplyr::lag)
df$starting_bars_variable[is.na(df$starting_bars_variable)] <- 0
}
temp_end <- df[,end] - stats::ave(df[,end], df[,id], FUN=dplyr::lag)
df[,end][!is.na(temp_end)] <- temp_end[!is.na(temp_end)]
df <- data.frame(df)
starting_times <- sort(unique(df[,start]),decreasing = TRUE)
df[,start] <- factor(df[,start],starting_times)
df[, id] <- factor(df[, id], levels = id_order)
plot <-
ggplot2::ggplot(df) +
ggplot2::geom_col(position = "stack",
ggplot2::aes_string(fill = name_fill,col = name_col,alpha=name_alpha, group = start,x = id, y = end),...) + ggplot2::coord_flip() +
ggplot2::theme_bw(base_size = base_size) +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank(),panel.grid.major = ggplot2::element_blank())
df[, id] <- factor(df[, id], levels = id_order)
id_order
table(id_order)
table(table(id_order))
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
table(starting_information$Subject)
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
merged_df_with_max <- merge(max_df,df,all=F)
merged_df_with_max
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
starting_df
table(starting_df$`df[, id]`)
table(table(starting_df$`df[, id]`))
merged_df_with_max
merge(starting_df,merged_df_with_max,all=F)
max_df <- stats::aggregate(df[,end]~df[,id],FUN=max,na.rm=T)
names(max_df) <- c(id,'MAX_TIME_FOR_EACH_ID')
max_df
merged_df_with_max <- merge(max_df,df,all=F)
starting_df <-  stats::aggregate(df[,end]~df[,id],FUN=min,na.rm=T)
names(starting_df) <- c(id,end)
starting_information <- merge(starting_df,merged_df_with_max,all=F)
starting_information
table(starting_information$Subject)
table(table(starting_information$Subject))
starting_df
table(starting_df)
table(starting_df$Subject)
starting_information
View(starting_information)
data_bars2
data_bars2
head(data_bars2)
swimmer_plot(df=data_bars2[data_bars2$eligible=="Yes",],id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Group')
temp <- data_bars2[data_bars2$Subject!="MET4-B-030B",]
swimmer_plot(df=temp,id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Group')
Off_trt_reason
swimmer_plot(df=temp,id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Off_trt_reason')
swimmer_plot(df=temp,id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Off_trt_reason')+
swimmer_arrows(df=data_arrows,id = 'Subject',arrow_positions = c(1,10),name_col = 'TX_COHORT_IND')+
swimmer_points(df=data_end_of_trt[!is.na(data_end_of_trt$time),],id='Subject',name_shape = 'Off_trt_reason',size=3,stroke=1.5)+
swimmer_text(df_text = iresist_iCPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='red',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = iresist_iUPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='blue',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = resist_PD_df,id = 'Subject',label = 'OVERALL_LES_RESP_TP',adj.x = -5,col='Purple',adj.y = -0.3, fontface = "bold",size=3)+
scale_shape_manual(values=c(12,13,8,15,16,17,11))  +
scale_y_continuous(name="Time on treatment (months)",breaks=seq(0,400,by=30),labels = seq(0,400,by=30)/30)+
guides(fill = guide_legend(override.aes = list(shape = NA)),
alpha = guide_legend(override.aes = list(shape = NA,col="NA")),
color=FALSE) + labs(alpha="Time on cycle")
head(data_bars2)
temp <- data_bars2[data_bars2$Subject!="MET4-B-030B" |data_bars2$InstanceName=="Cycle 01" ,]
swimmer_plot(df=temp,id='Subject',end = 'end',col=1,name_alpha = 'end',
name_fill='TX_COHORT_IND',id_order='Off_trt_reason')+
swimmer_arrows(df=data_arrows,id = 'Subject',arrow_positions = c(1,10),name_col = 'TX_COHORT_IND')+
swimmer_points(df=data_end_of_trt[!is.na(data_end_of_trt$time),],id='Subject',name_shape = 'Off_trt_reason',size=3,stroke=1.5)+
swimmer_text(df_text = iresist_iCPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='red',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = iresist_iUPD_df,id = 'Subject',label = 'NEO_IRECIST_OVR_TYP_STD',adj.x = -5,col='blue',adj.y = 0.3, fontface = "bold",size=3)+
swimmer_text(df_text = resist_PD_df,id = 'Subject',label = 'OVERALL_LES_RESP_TP',adj.x = -5,col='Purple',adj.y = -0.3, fontface = "bold",size=3)+
scale_shape_manual(values=c(12,13,8,15,16,17,11))  +
scale_y_continuous(name="Time on treatment (months)",breaks=seq(0,400,by=30),labels = seq(0,400,by=30)/30)+
guides(fill = guide_legend(override.aes = list(shape = NA)),
alpha = guide_legend(override.aes = list(shape = NA,col="NA")),
color=FALSE) + labs(alpha="Time on cycle")
devtools::document()
devtools::document()
getwd()
